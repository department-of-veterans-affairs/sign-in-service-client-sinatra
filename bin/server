#!/bin/bash

# Colors for output
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

PORT=4567
MAX_RETRIES=10
RETRY_DELAY=2

# Function to get all processes using the port
get_port_pids() {
  lsof -ti :${PORT} || true
}

# Function to check if port is in use
check_port() {
  if lsof -i :${PORT} >/dev/null 2>&1; then
    return 0
  fi
  if ! nc -z localhost ${PORT} >/dev/null 2>&1; then
    return 1
  fi
  return 0
}

# Function to cleanup existing processes
cleanup() {
  echo -e "${YELLOW}Cleaning up processes...${NC}"
  
  # Kill processes using the port
  local port_pids=$(get_port_pids)
  if [ ! -z "$port_pids" ]; then
    echo -e "${YELLOW}Stopping processes using port ${PORT}: $port_pids${NC}"
    for pid in $port_pids; do
      kill -9 $pid 2>/dev/null || true
    done
  fi

  # Wait for processes to fully terminate
  sleep $RETRY_DELAY
}

# Initial cleanup of any existing processes
cleanup

# Verify port is free
for i in $(seq 1 $MAX_RETRIES); do
  if check_port; then
    echo -e "${YELLOW}Waiting for port ${PORT} to be free (attempt $i/$MAX_RETRIES)...${NC}"
    cleanup
    sleep $RETRY_DELAY
  else
    echo -e "${GREEN}Port ${PORT} is free${NC}"
    break
  fi
done

if check_port; then
  echo -e "${RED}Failed to free port ${PORT} after multiple attempts.${NC}"
  echo -e "${RED}Please check manually with: lsof -i :${PORT}${NC}"
  echo -e "${RED}Or try: sudo lsof -i :${PORT}${NC}"
  exit 1
fi

echo -e "${GREEN}Starting server in development mode...${NC}"
echo "Listening on port ${PORT}"

# Set environment variables
export RACK_ENV=${RACK_ENV:-development}
export APP_ENV=${APP_ENV:-development}

# Start the server with a clean environment
exec env -i \
  PATH="$PATH" \
  HOME="$HOME" \
  RACK_ENV="$RACK_ENV" \
  APP_ENV="$APP_ENV" \
  SIS_BASE_URL="${SIS_BASE_URL}" \
  TEST_MODE="${TEST_MODE}" \
  bundle exec puma -C config/puma.rb
